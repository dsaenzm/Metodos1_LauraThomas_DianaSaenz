# -*- coding: utf-8 -*-
"""Punto11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17AfMQ3wooFlAlnDUxrbsQhjuHGzvP6gy
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy import integrate

class Integrator:
    
    def __init__(self, x,y):
        
        self.x = x
        self.y = y
        self.h = self.x[1] - self.x[0]
        
        self.integral = 0.


    def Simpson(self):
        
        self.integral = 0.
        
        self.integral += self.y[0] + self.y[-1]
        
        for i in range( len(y[1:-1]) ):
            if i%2 == 0:
                self.integral += 2*y[i+1]
            else:
                self.integral += 4*y[i+1]
                
        return self.integral*self.h/3

f = lambda x: np.sqrt(1+np.exp(-(x**2)))
x = np.linspace(-1,1,10)
y = f(x)
print(integrate.simpson(y,x))